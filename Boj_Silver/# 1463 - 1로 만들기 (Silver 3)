# 1463 - 1로 만들기 (Silver 3) - 다이나믹 프로그래밍 *******************
N = int(input())

# 원소 N개를 가지는 리스트.
# i+1번째 원소는 숫자 i를 만들기 위해 필요한 '연산'의 횟수이다.
num =  [0] * (N+1)

# num[2]부터 num[N]까지 '연산'을 수행한다.
# num[1]은 N=1일 때라서 값이 0이므로 연산 안해도 된다.
## - 연산 -
## i가 2의 배수인지, 3의 배수인지 판별한다.
## 그 뒤 num[i//2], num[i//3] 중 불가능한 값은 제외한다.
## num[i] =  '가능한 num[x] 중에서 제일 작은 num[x]' +1
for i in range(2,N+1):
  # 어차피 i가 2의 배수나 3의 배수고 num[i-1]보다 작은 num값을 가진다면 갱신된다.
  # 따라서 더하기 연산은 굳이 if문 쓰지 않아도 됨.
  num[i] = num[i-1] + 1
  # 2의 배수일 때의 연산횟수가 더 작으면 그걸로 바꾼다.
  if i%2 == 0 and num[i//2] < num[i-1]:
    num[i] = num[i//2]+1
  # 비교대상을 num[i]로 하면 i가 2의 배수인지와 상관없이 최솟값으로만 비교가능하다.
  if i%3 == 0 and num[i//3]+1 < num[i]:
    num[i] = num[i//3]+1

# 연산을 끝까지 수행하면 1부터 N까지의 모든 숫자에 대해
# 필요한 연산의 수가 num에 저장된다.
print(num[N])
